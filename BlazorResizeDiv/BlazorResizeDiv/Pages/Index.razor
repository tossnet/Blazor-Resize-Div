@page "/"
         
@inject IJSRuntime JS

<ol>
    <li>Convert JS to module</li>
</ol>

   
@result

<div id="myDiv1" class="myTask" @onmousedown="@(i => ondiv("myDiv1"))">

</div>   

<br />

<div id="myDiv2" class="myTask" @onmousedown="@(i => ondiv("myDiv2"))">
    <div class="resizer @display"></div>
</div>    


@code {
    private string result ="-";
    private string display = "handle-hidden";
    private InvokeHelper? invokeHelper;

    protected override async Task OnInitializedAsync()
    {
        invokeHelper = new InvokeHelper(NewSize);
    }

    private async Task ondiv(string id)
    {
        if (invokeHelper != null)
        {    
            await JS.InvokeVoidAsync("startMove",
                    DotNetObjectReference.Create(invokeHelper),id);
        }
    }

    private void NewSize(string message)
    {
        display = "handle-hidden";
        result = message;
        StateHasChanged();    
    }
}